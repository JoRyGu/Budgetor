{"version":3,"sources":["Compnents/UserDropDown/UserDropDown.module.css","Compnents/TransactionTable/TransactionTable.module.css","Compnents/App/App.module.css","Compnents/InputForm/InputForm.js","Compnents/UserDropDown/UserDropDown.js","Compnents/TransactionTable/TransactionTable.js","Compnents/App/App.js","serviceWorker.js","index.js","Compnents/InputForm/InputForm.module.css"],"names":["module","exports","dropDown","tableRowOdd","itemColumn","costColumn","itemColumnHead","costColumnHead","App","title","remainingBudget","remainingBudgetNegative","oddRow","evenRow","inputForm","props","react_default","a","createElement","className","styles","container","onSubmit","handleSubmit","type","itemName","autoFocus","required","placeholder","finalLine","step","moneySpent","submitButton","userDropDown","onChange","handleChange","value","TransactionTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cost","postDecimalStartIndex","newCost","includes","i","length","slice","_this2","transactions","map","transaction","index","key","id","tableRowEven","item","formatCost","Component","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","joshTransactionList","dianaTransactionList","activeUser","joshFunds","dianaFunds","bind","assertThisInitialized","outputFormattedFunds","firebase","database","ref","on","snap","forEach","budgetItem","val","newBudget","setState","toConsumableArray","concat","event","preventDefault","itemValue","target","children","costValue","firstChild","push","focus","Math","abs","toString","UserDropDown","InputForm","Compnents_TransactionTable_TransactionTable","Boolean","window","location","hostname","match","ReactDOM","render","Compnents_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06c3586b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDown\":\"UserDropDown_dropDown__jJJOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRowOdd\":\"TransactionTable_tableRowOdd__1CTtN\",\"itemColumn\":\"TransactionTable_itemColumn__guf-R\",\"costColumn\":\"TransactionTable_costColumn__1A0Bd\",\"itemColumnHead\":\"TransactionTable_itemColumnHead__1RxEy\",\"costColumnHead\":\"TransactionTable_costColumnHead__gqUya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2153C\",\"title\":\"App_title__3RVRU\",\"remainingBudget\":\"App_remainingBudget__2_IR5\",\"remainingBudgetNegative\":\"App_remainingBudgetNegative__2Dkim\",\"itemColumn\":\"App_itemColumn__1qkop\",\"costColumn\":\"App_costColumn__hcz-f\",\"oddRow\":\"App_oddRow__fDoP_\",\"evenRow\":\"App_evenRow__3Ye0s\"};","import React from 'react';\nimport styles from './InputForm.module.css';\n\nconst inputForm = (props) => {\n  return (\n    <form className={styles.container} onSubmit={props.handleSubmit}>\n      <p>Item</p>\n      <input type=\"text\" className={styles.itemName} autoFocus required placeholder=\"What was your purchase?\"/>\n      <p>Cost</p>\n      <div className={styles.finalLine}>\n        <input type=\"number\" step=\"0.01\" className={styles.moneySpent} placeholder=\"How much did it cost?\"/>\n        <button type=\"submit\" className={styles.submitButton}>Submit</button>\n      </div>\n    </form>\n  );\n}\n\nexport default inputForm;","import React from 'react';\nimport styles from './UserDropDown.module.css'\n\nconst userDropDown = (props) => {\n  return (\n    <select onChange={props.handleChange} className={styles.dropDown}>\n      <option value=\"Josh\">Josh</option>\n      <option value=\"Diana\">Diana</option>\n    </select>\n  );\n}\n\nexport default userDropDown;","import React, { Component } from 'react';\nimport styles from './TransactionTable.module.css';\n\nclass TransactionTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  formatCost(cost) {\n    const newCost = cost;\n\n    if (!newCost.includes('.')) {\n      return '$' + newCost + '.00';\n    }\n\n    let postDecimalStartIndex;\n    for(let i = 0; i < newCost.length; i++) {\n      if(newCost[i] === '.') {\n        postDecimalStartIndex = i + 1;\n      }\n    }\n\n    if (newCost.slice(postDecimalStartIndex).length < 2) {\n      return '$' + newCost + '0';\n    }\n\n    if(newCost.slice(postDecimalStartIndex).length > 2) {\n      return '$' + newCost.slice(0, postDecimalStartIndex) + newCost.slice(postDecimalStartIndex, 2);\n    }\n\n    return '$' + newCost;\n  }\n\n  render() {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th className={styles.itemColumnHead}>Item</th>\n            <th className={styles.costColumnHead}>Cost</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.props.transactions.map((transaction, index) => {\n              return (\n                index % 2 === 0 ?\n                  <tr key={transaction.id} className={styles.tableRowEven}>\n                    <td className={styles.itemColumn}>{transaction.item}</td>\n                    <td className={styles.costColumn}>{this.formatCost(transaction.cost)}</td>\n                  </tr> :\n                  <tr key={transaction.id} className={styles.tableRowOdd}>\n                    <td className={styles.itemColumn}>{transaction.item}</td>\n                    <td className={styles.costColumn}>{this.formatCost(transaction.cost)}</td>\n                  </tr>\n              )\n            })\n          }\n        </tbody>\n      </table>\n      \n    );\n  }\n}\n\nexport default TransactionTable;","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport InputForm from '../InputForm/InputForm';\nimport UserDropDown from '../UserDropDown/UserDropDown';\nimport TransactionTable from '../TransactionTable/TransactionTable';\nimport * as firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyBQT4gagrmpd788PtTAHUbVMcUaI9UowOw\",\n  authDomain: \"budgetor-8f433.firebaseapp.com\",\n  databaseURL: \"https://budgetor-8f433.firebaseio.com\",\n  projectId: \"budgetor-8f433\",\n  storageBucket: \"\",\n  messagingSenderId: \"1025319287803\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      joshTransactionList: [],\n      dianaTransactionList: [],\n      activeUser: 'Josh',\n      joshFunds: 450,\n      dianaFunds: 450\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.outputFormattedFunds = this.outputFormattedFunds.bind(this);\n    firebase.initializeApp(config);\n    this.database = firebase.database();\n  }\n\n  componentDidMount() {\n      this.database.ref('dianaTransactionList').on('value', snap => {\n      snap.forEach(transaction => {\n        let budgetItem = {id: transaction.key, cost: transaction.val().cost, item: transaction.val().item};\n        let newBudget = this.state.dianaFunds - transaction.val().cost;\n        this.setState({\n          dianaTransactionList: [...this.state.dianaTransactionList, budgetItem],\n          dianaFunds: newBudget\n        });\n      })\n    });\n\n    this.database.ref('joshTransactionList').on('value', snap => {\n      snap.forEach(transaction => {\n        let budgetItem = {id: transaction.key, cost: transaction.val().cost, item: transaction.val().item};\n        let newBudget = this.state.joshFunds - transaction.val().cost;\n        this.setState({\n          joshTransactionList: [...this.state.joshTransactionList, budgetItem],\n          joshFunds: newBudget\n        });\n      })\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let itemValue = event.target.children[1].value;\n    let costValue = event.target.children[3].firstChild.value;\n    const item = event.target.children[1];\n    const cost = event.target.children[3].firstChild;\n\n    if (this.state.activeUser === 'Josh') {\n      this.database.ref('joshTransactionList').push({cost: costValue, item: itemValue});\n    } else {\n      this.database.ref('dianaTransactionList').push({cost: costValue, item: itemValue});\n    }\n\n    item.value = '';\n    cost.value = '';\n    item.focus();\n  }\n\n  handleChange(event) {\n    this.setState({activeUser: event.target.value});\n  }\n\n  outputFormattedFunds() {\n    if (this.state.activeUser === 'Josh') {\n      if (this.state.joshFunds < 0) {\n        return (\n          <h2 className={styles.remainingBudgetNegative}>({this.formatCost(Math.abs(this.state.joshFunds))})</h2>\n        )\n      } else {\n        return (\n          <h2 className={styles.remainingBudget}>{this.formatCost(this.state.joshFunds)}</h2>\n        )\n      }\n    } else {\n      if (this.state.dianaFunds < 0) {\n        return (\n          <h2 className={styles.remainingBudgetNegative}>({this.formatCost(Math.abs(this.state.dianaFunds))})</h2>\n        )\n      } else {\n        return (\n          <h2 className={styles.remainingBudget}>{this.formatCost(this.state.dianaFunds)}</h2>\n        )\n      }\n    }\n  }\n\n  formatCost(cost) {\n    const newCost = cost.toString();\n\n    if (!newCost.includes('.')) {\n      return '$' + newCost + '.00';\n    }\n\n    let postDecimalStartIndex;\n    for(let i = 0; i < newCost.length; i++) {\n      if(newCost[i] === '.') {\n        postDecimalStartIndex = i + 1;\n      }\n    }\n\n    if (newCost.slice(postDecimalStartIndex).length < 2) {\n      return '$' + newCost + '0';\n    }\n\n    if(newCost.slice(postDecimalStartIndex).length > 2) {\n      return '$' + newCost.slice(0, postDecimalStartIndex) + newCost.slice(postDecimalStartIndex, 2);\n    }\n\n    return '$' + newCost;\n  }\n\n  getCostFromString(cost) {\n    return cost.slice(1);\n  }\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <UserDropDown handleChange={this.handleChange} />\n        <h1 className={styles.title}>{this.state.activeUser}'s Budget</h1>\n        {this.outputFormattedFunds()}\n        <InputForm handleSubmit={this.handleSubmit} />\n        {\n          this.state.activeUser === 'Josh' ? \n            <TransactionTable transactions={this.state.joshTransactionList} /> :\n            <TransactionTable transactions={this.state.dianaTransactionList} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Compnents/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InputForm_container__akGSY\",\"itemName\":\"InputForm_itemName__39Oxn\",\"moneySpent\":\"InputForm_moneySpent__27kXu\",\"submitButton\":\"InputForm_submitButton__3r39x\"};"],"sourceRoot":""}